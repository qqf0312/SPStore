#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/ubuntu/ex_sharding/libbloomfilter/src/bitvector.cpp
libbloomfilter/bf/bitvector.hpp
-
algorithm
-
cassert
-

/home/ubuntu/ex_sharding/libbloomfilter/src/bloom_filter/a2.cpp
libbloomfilter/bf/bloom_filter/a2.hpp
-
cassert
-

/home/ubuntu/ex_sharding/libbloomfilter/src/bloom_filter/basic.cpp
libbloomfilter/bf/bloom_filter/basic.hpp
-
iostream
-
cassert
-
cmath
-

/home/ubuntu/ex_sharding/libbloomfilter/src/bloom_filter/bitwise.cpp
libbloomfilter/bf/bloom_filter/bitwise.hpp
-

/home/ubuntu/ex_sharding/libbloomfilter/src/bloom_filter/counting.cpp
libbloomfilter/bf/bloom_filter/counting.hpp
-
algorithm
-
cassert
-

/home/ubuntu/ex_sharding/libbloomfilter/src/bloom_filter/stable.cpp
libbloomfilter/bf/bloom_filter/stable.hpp
-
cassert
-

/home/ubuntu/ex_sharding/libbloomfilter/src/counter_vector.cpp
libbloomfilter/bf/counter_vector.hpp
-
cassert
-

/home/ubuntu/ex_sharding/libbloomfilter/src/hash.cpp
libbloomfilter/bf/hash.hpp
-
stdexcept
-
cassert
-

libbloomfilter/bf/bitvector.hpp
boost/archive/binary_iarchive.hpp
-
boost/archive/binary_oarchive.hpp
-
boost/serialization/vector.hpp
-
iterator
-
limits
-
string
-
vector
-

libbloomfilter/bf/bloom_filter.hpp
libbloomfilter/bf/wrap.hpp
-

libbloomfilter/bf/bloom_filter/a2.hpp
libbloomfilter/bf/bloom_filter/basic.hpp
-

libbloomfilter/bf/bloom_filter/basic.hpp
random
-
libbloomfilter/bf/bitvector.hpp
-
libbloomfilter/bf/bloom_filter.hpp
-
libbloomfilter/bf/hash.hpp
-

libbloomfilter/bf/bloom_filter/bitwise.hpp
libbloomfilter/bf/bloom_filter/basic.hpp
-

libbloomfilter/bf/bloom_filter/counting.hpp
libbloomfilter/bf/counter_vector.hpp
-
libbloomfilter/bf/bloom_filter.hpp
-
libbloomfilter/bf/hash.hpp
-

libbloomfilter/bf/bloom_filter/stable.hpp
random
-
libbloomfilter/bf/bloom_filter/counting.hpp
-

libbloomfilter/bf/counter_vector.hpp
cstdint
-
vector
-
libbloomfilter/bf/bitvector.hpp
-

libbloomfilter/bf/h3.hpp
limits
-
random
-
boost/archive/binary_iarchive.hpp
-
boost/archive/binary_oarchive.hpp
-
boost/serialization/vector.hpp
-

libbloomfilter/bf/hash.hpp
libbloomfilter/bf/h3.hpp
-
libbloomfilter/bf/object.hpp
-
functional
-

libbloomfilter/bf/object.hpp
type_traits
-

libbloomfilter/bf/wrap.hpp
string
-
type_traits
-
vector
-
libbloomfilter/bf/object.hpp
-

